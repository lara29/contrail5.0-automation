# Copyright 2018, Juniper Networks Pvt Ltd.
# All rights reserved.
# command example: ansible-playbook -i all.inv 01-contrail-server-manager.yml
---
- name: DEPLOY CONTRAIL
  hosts: contrail-ubuntu-host
  gather_facts: false
  vars:
    deploy_env:
      base_dir: /root/
      osh_path: ${base_dir}/openstack-helm
      osh_infra_path: ${base_dir}/openstack-helm-infra
      chd_path: ${base_dir}/contrail-helm-deployer
      
  tasks:

    - name: Import variables from the file /vars/contrail.info into 'info' variable
      include_vars:
        file: contrail.info
        name: info
        
    - name: Download git
      apt:
        name: git
        
    - name: Get openstack-helm repository
      git:
        repo: https://github.com/Juniper/openstack-helm.git
        dest: /root/
        clone: yes
        
    - name: Get openstack-helm-infra repository
      git:
        repo: https://github.com/Juniper/openstack-helm-infra.git
        dest: /root/
        clone: yes
        
    - name: Get contrail-helm-deployer repository
      git:
        repo: https://github.com/Juniper/contrail-helm-deployer.git
        dest: /root/
        clone: yes

    - name: Alter max glance image file size to 0
      shell: |
          sed -i 's/proxy-body-size: "1024M"/proxy-body-size: "0"/g' $osh_path/glance/values.yaml
      
      environment: "{{ deploy_env }}"
      args:
        executable: /bin/bash
        
    - name: Run the deployment script
      script: deploy_commands.sh
      environment: "{{ deploy_env }}"
      
    - name: Display kubectl pods status
      shell: |
        kubectl get pods --all-namespaces
        NOT_RUNNING=`kubectl get pods --all-namespaces | awk '{if(NR>1)print}'| awk '{ print $4 }'| grep -v "Running"|wc -l`
      args:
        executable: /bin/bash
      register: pod_result
      
    - debug:
        var: pod_result.stdout_lines
        verbosity: 5
        
    - set_fact: pods_not_running="{{ lookup('env','NOT_RUNNING') }}"

    - name: Throw error and stop execution if any of the pods not in running status
      fail:
         msg: All the pods need to be in running state
      when: 
          
    - name: Wait for the Provisioning Process to complete
      shell: cat /var/log/contrail-server-manager/debug.log
      register: results
      args:
        executable: /bin/bash
      until: results.stdout.find("Process Done") != -1
      retries: 120
      delay: 20

