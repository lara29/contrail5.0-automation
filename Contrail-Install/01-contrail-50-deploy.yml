# Copyright 2018, Juniper Networks Pvt Ltd.
# All rights reserved.
# command example: ansible-playbook -i all.inv 01-contrail-server-manager.yml
---
- name: DEPLOY CONTRAIL
  hosts: contrail-ubuntu-host
  gather_facts: false
  vars:
    deploy_env:
      base_dir: /root/
      osh_path: ${base_dir}/openstack-helm
      osh_infra_path: ${base_dir}/openstack-helm-infra
      chd_path: ${base_dir}/contrail-helm-deployer
      
  tasks:

    - name: Import variables from the file /vars/contrail.info into 'info' variable
      include_vars:
        file: contrail.info
        name: info
        
    - name: Download git
      apt:
        name: git
        
    - name: Get openstack-helm repository
      git:
        repo: https://github.com/Juniper/openstack-helm.git
        dest: /root/
        clone: yes
        
    - name: Get openstack-helm-infra repository
      git:
        repo: https://github.com/Juniper/openstack-helm-infra.git
        dest: /root/
        clone: yes
        
    - name: Get contrail-helm-deployer repository
      git:
        repo: https://github.com/Juniper/contrail-helm-deployer.git
        dest: /root/
        clone: yes

    - name: Alter max glance image file size to 0 to allow files of any size to be uploaded to glance
      replace:
        path: $osh_path/glance/values.yaml
        regexp: 'proxy-body-size: "1024M"'
        replace: 'proxy-body-size: "0"'
      environment: "{{ deploy_env }}"
        
    - name: Run the deployment script
      script: deploy_commands.sh
      environment: "{{ deploy_env }}"
      
    - shell: |
        kubectl get pods --all-namespaces|tee kube_status.txt
      args:
        executable: /bin/bash
      register: pod_status

    - debug:
        var: pod_status.stdout_lines

    - shell: |
        awk '{if(NR>1)print}' kube_status.txt|awk '{ print $4 }'| grep -v "Running"|wc -l
      args:
        executable: /bin/bash
      register: not_running

    - debug:
        var: not_running.stdout_lines

    - fail:
        msg: All pods need to be in running state
      when: not_running.stdout != "0" 
          
    - name: Install python-openstackclient
      apt:
        name: python-openstackclient
